import java.util.Scanner;
class Account
{
    String cus_name;
    int account_no;
    Account(String c,int ac_no)
    {
         cus_name=c;
        account_no=ac_no;
    }
    public String toString()
    {
        return "Customer name:"+cus_name+"\n"+"Account number:"+account_no+"\n";
    }
}
class customer
{
    String type;
    String b_name;
    customer(String t,String b)
    {
        type=t;
        b_name=b;
    }
    public String toString()
    {
        return "Account type:"+type+"\n"+"Bank name:"+b_name+"\n";
    }
}
class RBI
{
    int min_balance;
    double r;
    double max_withdrawal;
    double dep_amount;
    int months;
    double with_drawal;
    double interest;
    double total;
     RBI(double dep_amount,int n)
     {
        min_balance=10000;
        r=1.0;
        max_withdrawal=1000;
        this.dep_amount=dep_amount;
        months=n;
    }
    void balance()
    {
        interest=dep_amount*months*r*0.01;
	System.out.println("Interest:"+interest);
        total=dep_amount+interest;
    }
}
class SBH extends RBI
{
    SBH(double dep_amount,int n,double with_drawal_amount)
    {
        super(dep_amount,n);
    with_drawal=with_drawal_amount;
    }
    void balance()
    {
        interest=dep_amount*months*r*0.01;
	System.out.println("Interest:"+interest);
        total=dep_amount+interest;
        if(with_drawal==0)
        {
            System.out.println("Balance amount:"+total);
        }
        else if(with_drawal<=max_withdrawal)
        {
            System.out.println("Debited amount:"+with_drawal);
            System.out.println("Balance amount:"+(total-with_drawal));
        }
        else
        {
            System.out.println("maintain Minimum balance");
        }
    }
}
class ICICI extends RBI
{
    ICICI(double dep_amount,int n,double with_drawal_amount)
    {
        super(dep_amount,n);
        max_withdrawal=500;
        r=1.5;
        with_drawal=with_drawal_amount;
    }
    void balance()
    {
        interest=dep_amount*months*r*0.01;
	System.out.println("Interest:"+interest);
        total=dep_amount+interest;
        if(with_drawal==0)
        {
            System.out.println("Balance amount:"+total);
        }
        else if(with_drawal<=max_withdrawal)
        {
            System.out.println("Debited amount:"+with_drawal);
            System.out.println("Balance amount:"+(total-with_drawal));
        }
        else
        {
            System.out.println("maintain Minimum balance");
        }
    }
}
class PNB extends RBI
{
    PNB(double dep_amount,int n,double with_drawal_amount)
    {
        super(dep_amount,n);
        min_balance=20000;
        r=2.0;
        max_withdrawal=2000;
         with_drawal=with_drawal_amount;
    }
    void balance()
    {
        interest=dep_amount*months*r*0.01;
	System.out.println("Interest:"+interest);
        total=dep_amount+interest;
        if(with_drawal==0)
        {
            System.out.println("Balance amount:"+total);
        }
        else if(with_drawal<=max_withdrawal)
        {
             System.out.println("Debited amount:"+with_drawal);
             System.out.println("Balance amount:"+(total-with_drawal));
        }
        else
        {
            System.out.println("maintain Minimum balance");
        }
    }
}
class AccountBalance
{
    public static void main(String args[])
    {
         Scanner sc=new Scanner(System.in);
         System.out.print("Name of the customer:");
         String c_name=sc.next();
         System.out.print("Account number:");
         int a_num=sc.nextInt();
         System.out.print("Account type:");
         String a_type=sc.next();
         System.out.print("Bank_Name=");
         String bank_name=sc.next();
         System.out.print("deposit_amount=");
         double dep_amount=sc.nextDouble();
         System.out.print("No_of_Months=");
         int n=sc.nextInt();
         System.out.print("Withdrawal_amount=");
         double with_drawal_amount=sc.nextDouble();
         System.out.println("------------------");
         Account ac=new Account(c_name,a_num);
         customer cu=new customer(a_type,bank_name);
         System.out.println("Customer Details:");
         System.out.print(ac);
         System.out.print(cu);
         System.out.println("------------------");
	
         switch(bank_name)
        {
            case "SBH":
                SBH sbh=new SBH(dep_amount,n,with_drawal_amount);
                sbh.balance();
                 break;
            case "ICICI":
             ICICI icici=new ICICI(dep_amount,n,with_drawal_amount);
                icici.balance();
                break;
            case "PNB":
                PNB pnb=new PNB(dep_amount,n,with_drawal_amount);
                 pnb.balance();
                 break;
        }
    }import java.util.*;
import java.lang.Math;
interface Number {
boolean iszero(int n);
boolean ispositive(int n);
boolean isnegative(int n);
boolean isodd(int n);
boolean iseven(int n);
boolean isprime(int n);
boolean isamstrong(int n);
}
class Verification implements Number
{
   public boolean iszero(int n)
   {
     if(n==0)
      {
        return true;
      }
    else
     {
        return false;
      }
   }
  public boolean ispositive(int n)
  {
     if(n>0)
     {
         return true;
     }
     else
     {
       return false;
     }
  }
 public boolean isnegative(int n)
 {
    if(n<0)
    {
       return true;
    }
    else
    {
       return false;
    }
}
public boolean isprime(int n)
{
   if(n>0)
   {
     int c=0;
     for(int i=1;i<n;i++)
     {
         if(n%i==0)
        {
       c++;
         }
     }
      if(c==1)
     {
     return true;
     }
    else
       {
     return false;
     }
  }
  else
  {
     return false;
  }
}
public boolean iseven(int n)
{
if(n%2==0)
{
return true;
}
else
{
return false;
}
}
public boolean isodd(int n)
{
if(n%2==1)
{
return true;
}
else
{
return false;
}
}
public boolean isamstrong(int n)
{
    if(n<0)
    {
      n=n*(-1);
    }
   double c=0;
    int x=n;
    while(x>0)
     {
        int r=x%10;
         c++;
        x=x/10;
     }
   int y=n;
   double sum=0;
   while(y>0)
   {
        double r=y%10;
        sum= sum + Math.pow(r,c);
        y=y/10;
    }
    if(sum==n)
     {
           return true;
      }
   else
    {
        return false;
     }
  }
}
class Check
{
public static void main(String args[])
{
Scanner scan = new Scanner(System.in);
System.out.println("enter a number");
int a= scan.nextInt();
Number obj = new Verification();
if(obj.iszero(a))
{
System.out.print("number is zero ");
}
if(obj.ispositive(a))
{
System.out.print("positive");
}
if(obj.isnegative(a))
{
System.out.print("negative");
}
if(obj.iseven(a))
{
System.out.print(" and even");
}
if(obj.isodd(a))
{
System.out.print(" and odd");
}
if(obj.isprime(a))
{
System.out.print(" and prime");
}
if(obj.isamstrong(a))
{
System.out.print(" and amstrong");
}
}
}
}





